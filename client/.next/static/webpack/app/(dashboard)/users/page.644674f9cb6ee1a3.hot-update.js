"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/users/page",{

/***/ "(app-pages-browser)/./src/state/api.ts":
/*!**************************!*\
  !*** ./src/state/api.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; },\n/* harmony export */   useCreateClientMutation: function() { return /* binding */ useCreateClientMutation; },\n/* harmony export */   useCreateProductMutation: function() { return /* binding */ useCreateProductMutation; },\n/* harmony export */   useCreatePurchaseDetailsMutation: function() { return /* binding */ useCreatePurchaseDetailsMutation; },\n/* harmony export */   useCreatePurchaseMutation: function() { return /* binding */ useCreatePurchaseMutation; },\n/* harmony export */   useCreateSaleDetailsMutation: function() { return /* binding */ useCreateSaleDetailsMutation; },\n/* harmony export */   useCreateSaleMutation: function() { return /* binding */ useCreateSaleMutation; },\n/* harmony export */   useCreateUserMutation: function() { return /* binding */ useCreateUserMutation; },\n/* harmony export */   useDeleteClientMutation: function() { return /* binding */ useDeleteClientMutation; },\n/* harmony export */   useDeleteProductMutation: function() { return /* binding */ useDeleteProductMutation; },\n/* harmony export */   useDeletePurchaseDetailsMutation: function() { return /* binding */ useDeletePurchaseDetailsMutation; },\n/* harmony export */   useDeletePurchaseMutation: function() { return /* binding */ useDeletePurchaseMutation; },\n/* harmony export */   useDeleteSaleDetailsMutation: function() { return /* binding */ useDeleteSaleDetailsMutation; },\n/* harmony export */   useDeleteSaleMutation: function() { return /* binding */ useDeleteSaleMutation; },\n/* harmony export */   useDeleteUserMutation: function() { return /* binding */ useDeleteUserMutation; },\n/* harmony export */   useGetClientsQuery: function() { return /* binding */ useGetClientsQuery; },\n/* harmony export */   useGetDashboardMetricsQuery: function() { return /* binding */ useGetDashboardMetricsQuery; },\n/* harmony export */   useGetExpensesByCategoryQuery: function() { return /* binding */ useGetExpensesByCategoryQuery; },\n/* harmony export */   useGetLoginInfoQuery: function() { return /* binding */ useGetLoginInfoQuery; },\n/* harmony export */   useGetProductTypesQuery: function() { return /* binding */ useGetProductTypesQuery; },\n/* harmony export */   useGetProductsQuery: function() { return /* binding */ useGetProductsQuery; },\n/* harmony export */   useGetPurchaseDetailsByPurchaseIdQuery: function() { return /* binding */ useGetPurchaseDetailsByPurchaseIdQuery; },\n/* harmony export */   useGetPurchaseDetailsQuery: function() { return /* binding */ useGetPurchaseDetailsQuery; },\n/* harmony export */   useGetPurchasesQuery: function() { return /* binding */ useGetPurchasesQuery; },\n/* harmony export */   useGetSaleDetailsQuery: function() { return /* binding */ useGetSaleDetailsQuery; },\n/* harmony export */   useGetSalesQuery: function() { return /* binding */ useGetSalesQuery; },\n/* harmony export */   useGetSuppliersQuery: function() { return /* binding */ useGetSuppliersQuery; },\n/* harmony export */   useGetUserTypesQuery: function() { return /* binding */ useGetUserTypesQuery; },\n/* harmony export */   useGetUsersQuery: function() { return /* binding */ useGetUsersQuery; },\n/* harmony export */   useLoginMutation: function() { return /* binding */ useLoginMutation; },\n/* harmony export */   useUpdateClientMutation: function() { return /* binding */ useUpdateClientMutation; },\n/* harmony export */   useUpdateProductMutation: function() { return /* binding */ useUpdateProductMutation; },\n/* harmony export */   useUpdatePurchaseMutation: function() { return /* binding */ useUpdatePurchaseMutation; },\n/* harmony export */   useUpdateSaleDetailsMutation: function() { return /* binding */ useUpdateSaleDetailsMutation; },\n/* harmony export */   useUpdateSaleMutation: function() { return /* binding */ useUpdateSaleMutation; },\n/* harmony export */   useUpdateUserMutation: function() { return /* binding */ useUpdateUserMutation; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit/query/react */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/query/rtk-query.modern.mjs\");\n/* harmony import */ var _reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit/query/react */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/query/react/rtk-query-react.modern.mjs\");\n\nconst baseQueryWithAuth = (0,_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__.fetchBaseQuery)({\n    baseUrl: \"http://localhost:8000\",\n    prepareHeaders: (headers, param)=>{\n        let { getState } = param;\n        const token = getState().global.userToken;\n        if (token) {\n            headers.set(\"Authorization\", \"Bearer \".concat(token));\n        }\n        return headers;\n    }\n});\nconst api = (0,_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_1__.createApi)({\n    baseQuery: baseQueryWithAuth,\n    reducerPath: \"api\",\n    tagTypes: [\n        \"DashboardMetrics\",\n        \"Products\",\n        \"ProductTypes\",\n        \"Suppliers\",\n        \"Users\",\n        \"UserTypes\",\n        \"Expenses\",\n        \"Login\",\n        \"Purchases\",\n        \"Clients\",\n        \"Sales\"\n    ],\n    endpoints: (build)=>({\n            getDashboardMetrics: build.query({\n                query: ()=>\"/dashboard\",\n                providesTags: [\n                    \"DashboardMetrics\"\n                ]\n            }),\n            getProducts: build.query({\n                query: (search)=>({\n                        url: \"/products\",\n                        params: search ? {\n                            search\n                        } : {}\n                    }),\n                providesTags: [\n                    \"Products\"\n                ]\n            }),\n            getProductTypes: build.query({\n                query: ()=>\"/product-types\",\n                providesTags: [\n                    \"ProductTypes\"\n                ]\n            }),\n            getSuppliers: build.query({\n                query: ()=>\"/suppliers\",\n                providesTags: [\n                    \"Suppliers\"\n                ]\n            }),\n            createProduct: build.mutation({\n                query: (newProduct)=>({\n                        url: \"/products\",\n                        method: \"POST\",\n                        body: newProduct\n                    }),\n                invalidatesTags: [\n                    \"Products\"\n                ]\n            }),\n            deleteProduct: build.mutation({\n                query: (productId)=>({\n                        url: \"/products/\".concat(productId),\n                        method: \"DELETE\"\n                    }),\n                invalidatesTags: [\n                    \"Products\"\n                ]\n            }),\n            updateProduct: build.mutation({\n                query: (param)=>{\n                    let { productId, updatedProduct } = param;\n                    return {\n                        url: \"/products/\".concat(productId),\n                        method: \"PUT\",\n                        body: updatedProduct\n                    };\n                },\n                invalidatesTags: [\n                    \"Products\"\n                ]\n            }),\n            getUsers: build.query({\n                query: ()=>\"/users\",\n                providesTags: [\n                    \"Users\"\n                ]\n            }),\n            createUser: build.mutation({\n                query: (newUser)=>({\n                        url: \"/users\",\n                        method: \"POST\",\n                        body: newUser\n                    }),\n                invalidatesTags: [\n                    \"Users\"\n                ]\n            }),\n            deleteUser: build.mutation({\n                query: (userId)=>({\n                        url: \"/users/\".concat(userId),\n                        method: \"DELETE\"\n                    }),\n                invalidatesTags: [\n                    \"Users\"\n                ]\n            }),\n            updateUser: build.mutation({\n                query: (param)=>{\n                    let { userId, updatedUser } = param;\n                    return {\n                        url: \"/users/\".concat(userId),\n                        method: \"PUT\",\n                        body: updatedUser\n                    };\n                },\n                invalidatesTags: [\n                    \"Users\"\n                ]\n            }),\n            getUserTypes: build.query({\n                query: ()=>\"/user-types\",\n                providesTags: [\n                    \"UserTypes\"\n                ]\n            }),\n            getExpensesByCategory: build.query({\n                query: ()=>\"/expenses\",\n                providesTags: [\n                    \"Expenses\"\n                ]\n            }),\n            login: build.mutation({\n                query: (credentials)=>({\n                        url: \"/login\",\n                        method: \"POST\",\n                        body: credentials\n                    }),\n                invalidatesTags: [\n                    \"Login\"\n                ]\n            }),\n            getLoginInfo: build.query({\n                query: ()=>\"/login\",\n                providesTags: [\n                    \"Login\"\n                ]\n            }),\n            getPurchases: build.query({\n                query: ()=>\"/purchases\",\n                providesTags: [\n                    \"Purchases\"\n                ]\n            }),\n            createPurchase: build.mutation({\n                query: (newPurchase)=>({\n                        url: \"/purchases\",\n                        method: \"POST\",\n                        body: newPurchase\n                    }),\n                invalidatesTags: [\n                    \"Purchases\"\n                ]\n            }),\n            deletePurchase: build.mutation({\n                query: (purchaseId)=>({\n                        url: \"/purchases/\".concat(purchaseId),\n                        method: \"DELETE\"\n                    }),\n                invalidatesTags: [\n                    \"Purchases\"\n                ]\n            }),\n            getPurchaseDetails: build.query({\n                query: ()=>\"/purchase-details\",\n                providesTags: [\n                    \"Purchases\"\n                ]\n            }),\n            getPurchaseDetailsByPurchaseId: build.query({\n                query: (purchaseId)=>({\n                        url: \"/purchase-details/purchase/\".concat(purchaseId),\n                        params: {\n                            purchaseId\n                        }\n                    }),\n                providesTags: [\n                    \"Purchases\"\n                ]\n            }),\n            createPurchaseDetails: build.mutation({\n                query: (newPurchaseDetails)=>({\n                        url: \"/purchase-details\",\n                        method: \"POST\",\n                        body: newPurchaseDetails\n                    }),\n                invalidatesTags: [\n                    \"Purchases\"\n                ]\n            }),\n            deletePurchaseDetails: build.mutation({\n                query: (purchaseDetailsId)=>({\n                        url: \"/purchase-details/\".concat(purchaseDetailsId),\n                        method: \"DELETE\"\n                    }),\n                invalidatesTags: [\n                    \"Purchases\"\n                ]\n            }),\n            updatePurchase: build.mutation({\n                query: (param)=>{\n                    let { purchaseId, updatedPurchase } = param;\n                    return {\n                        url: \"/purchases/\".concat(purchaseId),\n                        method: \"PUT\",\n                        body: updatedPurchase\n                    };\n                },\n                invalidatesTags: [\n                    \"Purchases\"\n                ]\n            }),\n            getClients: build.query({\n                query: ()=>\"/clients\",\n                providesTags: [\n                    \"Clients\"\n                ]\n            }),\n            createClient: build.mutation({\n                query: (newClient)=>({\n                        url: \"/clients\",\n                        method: \"POST\",\n                        body: newClient\n                    }),\n                invalidatesTags: [\n                    \"Clients\"\n                ]\n            }),\n            updateClient: build.mutation({\n                query: (param)=>{\n                    let { clientId, updatedClient } = param;\n                    return {\n                        url: \"/clients/\".concat(clientId),\n                        method: \"PUT\",\n                        body: updatedClient\n                    };\n                },\n                invalidatesTags: [\n                    \"Clients\"\n                ]\n            }),\n            deleteClient: build.mutation({\n                query: (clientId)=>({\n                        url: \"/clients/\".concat(clientId),\n                        method: \"DELETE\"\n                    }),\n                invalidatesTags: [\n                    \"Clients\"\n                ]\n            }),\n            getSales: build.query({\n                query: ()=>\"/sales\",\n                providesTags: [\n                    \"Sales\"\n                ]\n            }),\n            createSale: build.mutation({\n                query: (newSale)=>({\n                        url: \"/sales\",\n                        method: \"POST\",\n                        body: newSale\n                    }),\n                invalidatesTags: [\n                    \"Sales\"\n                ]\n            }),\n            updateSale: build.mutation({\n                query: (param)=>{\n                    let { saleId, updatedSale } = param;\n                    return {\n                        url: \"/sales/\".concat(saleId),\n                        method: \"PUT\",\n                        body: updatedSale\n                    };\n                },\n                invalidatesTags: [\n                    \"Sales\"\n                ]\n            }),\n            deleteSale: build.mutation({\n                query: (saleId)=>({\n                        url: \"/sales/\".concat(saleId),\n                        method: \"DELETE\"\n                    }),\n                invalidatesTags: [\n                    \"Sales\"\n                ]\n            }),\n            getSaleDetails: build.query({\n                query: ()=>\"/sale-details\",\n                providesTags: [\n                    \"Sales\"\n                ]\n            }),\n            createSaleDetails: build.mutation({\n                query: (newSaleDetails)=>({\n                        url: \"/sale-details\",\n                        method: \"POST\",\n                        body: newSaleDetails\n                    }),\n                invalidatesTags: [\n                    \"Sales\"\n                ]\n            }),\n            updateSaleDetails: build.mutation({\n                query: (param)=>{\n                    let { saleDetailsId, updatedSaleDetails } = param;\n                    return {\n                        url: \"/sale-details/\".concat(saleDetailsId),\n                        method: \"PUT\",\n                        body: updatedSaleDetails\n                    };\n                },\n                invalidatesTags: [\n                    \"Sales\"\n                ]\n            }),\n            deleteSaleDetails: build.mutation({\n                query: (saleDetailsId)=>({\n                        url: \"/sale-details/\".concat(saleDetailsId),\n                        method: \"DELETE\"\n                    }),\n                invalidatesTags: [\n                    \"Sales\"\n                ]\n            })\n        })\n});\nconst { useGetDashboardMetricsQuery, useGetProductsQuery, useGetProductTypesQuery, useGetSuppliersQuery, useCreateProductMutation, useDeleteProductMutation, useUpdateProductMutation, useGetUsersQuery, useCreateUserMutation, useDeleteUserMutation, useUpdateUserMutation, useGetUserTypesQuery, useGetExpensesByCategoryQuery, useLoginMutation, useGetLoginInfoQuery, useGetPurchasesQuery, useCreatePurchaseMutation, useDeletePurchaseMutation, useGetPurchaseDetailsQuery, useCreatePurchaseDetailsMutation, useDeletePurchaseDetailsMutation, useGetPurchaseDetailsByPurchaseIdQuery, useUpdatePurchaseMutation, useGetClientsQuery, useCreateClientMutation, useUpdateClientMutation, useDeleteClientMutation, useGetSalesQuery, useCreateSaleMutation, useUpdateSaleMutation, useDeleteSaleMutation, useGetSaleDetailsQuery, useCreateSaleDetailsMutation, useUpdateSaleDetailsMutation, useDeleteSaleDetailsMutation } = api;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/state/api.ts\n"));

/***/ })

});